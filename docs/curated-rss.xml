<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title><![CDATA[Recopilador de contenidos curados | iyaki]]></title>
        <description><![CDATA[Recopilador de contenidos curados | iyaki]]></description>
        <link>https://iyaki.ar/curated.html</link>
        <image>
            <url>https://iyaki.ar/images/logo.webp</url>
            <title>Recopilador de contenidos curados | iyaki</title>
            <link>https://iyaki.ar/curated.html</link>
        </image>
        <generator>RSS for Node</generator>
        <lastBuildDate>Sat, 22 Jul 2023 08:07:17 GMT</lastBuildDate>
        <atom:link href="https://iyaki.ar/curated-rss.xml" rel="self" type="application/rss+xml"/>
        <language><![CDATA[es]]></language>
        <webMaster><![CDATA[Ivan Yaki]]></webMaster>
        <ttl>60</ttl>
        <category><![CDATA[Tecnología]]></category>
        <category><![CDATA[Diseño de sistemas]]></category>
        <category><![CDATA[Management]]></category>
        <item>
            <title><![CDATA[How to Use AI to Do Stuff: An Opinionated Guide]]></title>
            <description><![CDATA[Los sistemas de IA cada vez más poderosos se están lanzando a un ritmo cada vez más rápido. Esta semana vio el debut de Claude 2, probablemente el segundo sistema de IA más capaz disponible para el público. Sin embargo, aún ninguna empresa de IA parece haber proporcionado documentación para el usuario, en su lugar, las únicas guías de usuario disponibles parecen ser hilos de influenciadores en Twitter. La documentación por rumor es una elección extraña para organizaciones que dicen estar preocupadas por el uso adecuado de sus tecnologías, pero aquí estamos.]]></description>
            <link>https://www.oneusefulthing.org/p/how-to-use-ai-to-do-stuff-an-opinionated</link>
            <guid isPermaLink="true">https://www.oneusefulthing.org/p/how-to-use-ai-to-do-stuff-an-opinionated</guid>
        </item>
        <item>
            <title><![CDATA[I don't know how I feel about email]]></title>
            <description><![CDATA[Recientemente he estado intentando usar correo electrónico y simplemente no sé cómo debería sentirme al respecto. Hay muchos problemas fundamentales con él que parecen filtrarse en cada parte del protocolo, experiencia de usuario y todo esto simplemente me deja incierto acerca de su futuro.]]></description>
            <link>https://xeiaso.net/blog/idk-about-email</link>
            <guid isPermaLink="true">https://xeiaso.net/blog/idk-about-email</guid>
        </item>
        <item>
            <title><![CDATA[How I run my servers]]></title>
            <description><![CDATA[He estado escribiendo recientemente sobre servidores e infraestructura de internet. Mucha de esta escritura se basa en ejecutar software de servidor en una máquina virtual o en una máquina física, en lugar de utilizar una solución más "en la nube", lo cual es algo impopular en estos días. Sin embargo, creo que es una forma bastante razonable de hacer las cosas y no es tan difícil como muchas personas piensan. Este artículo describe de forma sencilla cómo ejecuto la mayoría de los servidores que opero. Principalmente describe el funcionamiento del software de servidor que he escrito yo mismo, ya que esto me permite hacerlo mucho más robusto y fácil de implementar que la gran mayoría del software disponible en el mercado. Este describe aproximadamente la configuración para thoughts.page, hanabi.site, cgmserver, phonebridge y otros servicios. Estas aplicaciones se ejecutan en máquinas virtuales de DigitalOcean, en el nivel de $5/mes. (Algunas de ellas están en la misma máquina virtual, otras en máquinas virtuales diferentes, pero hablaré más de eso más adelante). Las máquinas virtuales utilizan Debian 10. El software de servidor está escrito en Rust. Está enlazado estáticamente y todo el html, css, configuración, secretos, etc. están compilados en el binario. Logro esto con rust-musl-builder y rust-embed. Lo que significa que la implementación solo requiere copiar un solo archivo al servidor. Se pueden lograr cosas similares en lenguajes como Go, C++, etc., y probablemente en otros, aunque no conozco los detalles exactos de cómo hacerlo en esos lenguajes. Si estás utilizando un lenguaje que no te permite hacer esto fácilmente, una buena alternativa sería construir un contenedor Docker como artefacto de compilación, lo que también te dará un solo archivo para implementar. Utilizo systemd para asegurarme de que el binario se inicie cuando se inicie el servidor. La mayoría de mis archivos de unidades de systemd tienen 9 líneas y son extremadamente básicos. systemd en sí mismo es bastante complicado, pero simplemente iniciar un servidor al iniciar no te expone a la mayor parte de esa complejidad. Utilizo un simple script de implementación que copia el binario al servidor y reinicia el servidor, teniendo un poco de cuidado para permitir deshacer cambios y asegurarme de que siempre haya una versión válida en ejecución, incluso si se interrumpe la conexión mientras estoy implementando. Los programas que requieren una base de datos utilizan SQLite, lo que significa que todo el estado de la aplicación se guarda en un solo archivo. Tengo dos soluciones de respaldo redundantes: diariamente, se realiza una copia de seguridad a través del comando .backup de SQLite, y se guarda en Tarsnap. El script para hacer esto se ejecuta mediante cron. También uso Litestream para transmitir una copia de la base de datos al almacenamiento de DigitalOcean Spaces cada segundo, con capturas de pantalla cada 6 horas. Esto me da mucha confianza de que incluso en los casos más desastrosos, es poco probable que pierda una cantidad significativa de datos, y si quisiera estar más seguro, podría aumentar la frecuencia de las copias de seguridad de Tarsnap. Todos mis servidores se ejecutan detrás de nginx como proxy inverso. La principal ventaja de esto es que nginx puede terminar el TLS, lo que significa que mis aplicaciones no necesitan preocuparse por HTTPS en absoluto. Obtengo mis certificados HTTPS de Let's Encrypt a través de certbot, que se encarga de la renovación automática para que yo no tenga que hacer nada para mantenerlo funcionando. Así es como se ve mi configuración de Nginx para hanabi.site. Nginx también funciona muy bien para servir archivos estáticos, simplemente puedes usar scp o rsync para copiarlos desde tu computadora al servidor. Esta es una configuración simple y extremadamente robusta. Todo el software en el camino de los servicios (excepto las aplicaciones en sí) ha existido durante décadas y ha sido ampliamente probado en batalla. Prácticamente no hay mantenimiento involucrado en mantener un sitio como este en funcionamiento, siempre y cuando siga pagando mis facturas de DigitalOcean, seguirá funcionando. Las únicas veces que mi monitoreo ha detectado problemas con estos sitios han sido problemas transitorios de conexión en DigitalOcean. Debo hacer actualizaciones ocasionalmente: Debian tiene 5 años de soporte, por lo que deberé actualizar a Debian 11 en aproximadamente dos años y medio, y si (cuando) vuelva a ocurrir algo como Heartbleed, tendré que parcharlo. Sin embargo, eventos como esos son bastante raros. Una queja sobre esta configuración es que pagar $5/mes por cada servicio que deseas ejecutar es mucho. Esto es ciertamente molesto, pero es bastante factible ejecutar varios servicios en la misma VM. Para proporcionar aislamiento, ejecuto cada servicio como su propia cuenta de usuario de Unix. Esta forma de aislamiento ha existido desde los inicios de Unix y parece ser bastante robusta. Si deseas tener más aislamiento, también puedes usar systemd-nspawn o firejail. Normalmente no me molesto, si algo es realmente importante para mantenerlo seguro, simplemente pagaré los $5/mes adicionales para ejecutarlo en su propia VM. Entonces, el proceso para configurar un nuevo proyecto se ve así: [Translation ends]]]></description>
            <link>https://blog.wesleyac.com/posts/how-i-run-my-servers</link>
            <guid isPermaLink="true">https://blog.wesleyac.com/posts/how-i-run-my-servers</guid>
        </item>
        <item>
            <title><![CDATA[Practical Typography]]></title>
            <description><![CDATA[Este artículo ofrece una perspectiva interesante sobre el impacto de las redes sociales en la sociedad actual, destacando tanto los aspectos positivos como los negativos que esta tecnología conlleva. Invita a reflexionar sobre cómo estamos utilizando estas plataformas y cómo podemos encontrar un equilibrio saludable en su uso.]]></description>
            <link>https://practicaltypography.com/</link>
            <guid isPermaLink="true">https://practicaltypography.com/</guid>
        </item>
        <item>
            <title><![CDATA[What’s In A Font? Website Typography Best Practices]]></title>
            <description><![CDATA[Me encanta el diseño web y la tipografía de los sitios web es una parte clave de eso. Muchas personas piensan que la tipografía simplemente se refiere a la fuente (o familia de fuentes) que eliges para tu sitio web, pero es mucho más que eso. Es el peso del texto, el ancho de las líneas, los espacios entre esas líneas. Básicamente, es cada aspecto del texto en tu sitio.]]></description>
            <link>https://kevquirk.com/whats-in-a-font-researching-website-typography/</link>
            <guid isPermaLink="true">https://kevquirk.com/whats-in-a-font-researching-website-typography/</guid>
        </item>
        <item>
            <title><![CDATA[Why Shopify Elevated the Non-Manager Career Path and Ditched Meetings]]></title>
            <description><![CDATA[En este artículo, Kaz Nejatian, VP de Producto y COO de Shopify, habla sobre cómo enfocarse en la artesanía del producto y evitar la acumulación de reuniones a medida que la empresa crece. El objetivo de Shopify es convertirse en el paraíso de los artesanos, eliminando obstáculos para que puedan hacer su mejor trabajo y ser recompensados por ello.]]></description>
            <link>https://creatoreconomy.so/p/kaz-coo-shopify-craft-and-no-meetings</link>
            <guid isPermaLink="true">https://creatoreconomy.so/p/kaz-coo-shopify-craft-and-no-meetings</guid>
        </item>
        <item>
            <title><![CDATA[CSS Findings From The Threads App]]></title>
            <description><![CDATA[Cuando me encuentro con un nuevo producto, una de las primeras cosas que viene a mi mente es cómo implementaron el CSS. Esto no fue diferente cuando me encontré con Threads de Meta. Rápidamente exploré la aplicación móvil y me di cuenta de que podía previsualizar publicaciones públicas en la web. Esto me brindó la oportunidad de investigar más a fondo. Me encontré con algunos hallazgos interesantes, los cuales discutiré en este artículo. ¡Vamos a sumergirnos! Uno de los casos de uso más destacados de CSS Grid en una aplicación de producción se encuentra en Threads. CSS Grid se utiliza para construir el diseño de las publicaciones. Echa un vistazo: Un dato curioso: la primera columna de la cuadrícula se llama --barcelona. Me gustaría saber la razón detrás de esta elección. El diseño de las publicaciones consiste en una cuadrícula de 2 columnas * 4 filas. No hay un contenedor principal; cada elemento dentro de la publicación se coloca manualmente utilizando las propiedades grid-column y grid-row. El avatar se posiciona en la primera columna y abarca las dos primeras filas. Vale la pena mencionar la presencia de padding-top. Aunque no pude encontrar una razón específica en el código de producción, parece afinar la alineación de la interfaz de usuario. Aquí hay una comparación antes y después de un avatar con y sin el tratamiento de padding-top.]]></description>
            <link>https://ishadeed.com/article/threads-app-css/</link>
            <guid isPermaLink="true">https://ishadeed.com/article/threads-app-css/</guid>
        </item>
        <item>
            <title><![CDATA[What we talk about when we talk about System Design]]></title>
            <description><![CDATA[En mi experiencia como investigador y trabajador de la industria, he descubierto que el proceso de diseño basado en la abstracción es eficaz para resolver problemas complejos tanto en entornos de investigación como en entornos de producción. Este enfoque permite manejar la complejidad de manera organizada y facilita la consecución de los objetivos de producción de manera rápida y segura.]]></description>
            <link>https://maheshba.bitbucket.io/blog/2023/07/12/Design.html</link>
            <guid isPermaLink="true">https://maheshba.bitbucket.io/blog/2023/07/12/Design.html</guid>
        </item>
        <item>
            <title><![CDATA[10 Tips How to Evaluate Leadership Skills When Hiring]]></title>
            <description><![CDATA[Al buscar a un gran líder, es importante encontrar a alguien que pueda llevar a cabo una visión y obtener resultados. Algunos de los habilidades clave de liderazgo incluyen la capacidad de comunicación, la toma de decisiones, la motivación y la resolución de problemas.]]></description>
            <link>https://toggl.com/blog/evaluate-leadership-skills</link>
            <guid isPermaLink="true">https://toggl.com/blog/evaluate-leadership-skills</guid>
        </item>
        <item>
            <title><![CDATA[Customer Success Is Broken. Here's How to Fix It]]></title>
            <description><![CDATA[En la última década, el éxito del cliente (CS) ha ganado popularidad como una categoría emergente, pero muchas empresas se están dando cuenta de que no saben qué resultados únicos debe lograr el CS en primer lugar. Sin embargo, cortar el CS no es necesariamente la solución, en su lugar, es importante mantener un enfoque claro en la salud del cliente como indicador principal de los ingresos y productos de la empresa.]]></description>
            <link>https://a16z.com/2023/07/11/customer-success-is-broken/?utm_source=tldrfounders</link>
            <guid isPermaLink="true">https://a16z.com/2023/07/11/customer-success-is-broken/?utm_source=tldrfounders</guid>
        </item>
        <item>
            <title><![CDATA[Regex Isn't Hard]]></title>
            <description><![CDATA[Regex obtiene una mala reputación por ser muy complejo. Eso es justo, pero también creo que si te enfocas en un subconjunto clave de regex, no es tan difícil. La mayoría de la complejidad proviene de varios "atajos" que son difíciles de recordar. Si ignoras esos atajos, el lenguaje en sí es bastante pequeño y portátil en diferentes lenguajes de programación. Vale la pena conocer regex porque puedes hacer MUCHO con muy poco código. Si intento replicar lo que hace mi regex utilizando código procesal normal, a menudo es muy detallado, con errores y significativamente más lento. A menudo lleva horas o días hacerlo mejor que un par de minutos escribiendo regex.]]></description>
            <link>https://timkellogg.me/blog/2023/07/11/regex</link>
            <guid isPermaLink="true">https://timkellogg.me/blog/2023/07/11/regex</guid>
        </item>
        <item>
            <title><![CDATA[Plans are just vibes on a spreadsheet. But they are invaluable]]></title>
            <description><![CDATA[Recientemente charlé con un experimentado consultor de TI. Mucha experiencia. ¿Su consejo? Nunca poner fechas en un plan. Creo que eso suena familiar para muchas personas. Porque sucede: en una organización disfuncional, algunas personas utilizan las fechas para castigar y culpar. Pero lo que me sorprendió es la sumisión como reacción. A veces, los actores maliciosos utilizan una pieza esencial de información, por lo que responden ocultándola a todos. No lo compro. No lo hacemos en Amazon. No lo hicimos en mi última empresa, ni en la empresa anterior a esa (o la anterior). Y no es porque estos lugares fueran iluminados. Es porque las personas en las trincheras construyendo cosas tienen las herramientas para superar a los acusadores. Intentaré explicar estas herramientas aquí, y cómo es tomar el control de tu plan, compartir con confianza las fechas que posees y ajustar el plan según sea necesario sin disculparte.]]></description>
            <link>https://rexm.substack.com/p/plans-are-just-vibes-on-a-spreadsheet</link>
            <guid isPermaLink="true">https://rexm.substack.com/p/plans-are-just-vibes-on-a-spreadsheet</guid>
        </item>
        <item>
            <title><![CDATA[Mapa de Empatía: qué es y cómo hacerlo en 6 pasos]]></title>
            <description><![CDATA[identificar y comprender las necesidades, deseos, dolores y emociones de tu cliente ideal, lo que facilita la creación de estrategias efectivas para satisfacer sus demandas y establecer una conexión emocional con ellos.]]></description>
            <link>https://www.rdstation.com/blog/es/mapa-de-empatia/</link>
            <guid isPermaLink="true">https://www.rdstation.com/blog/es/mapa-de-empatia/</guid>
        </item>
        <item>
            <title><![CDATA[Why This Opportunity Solution Tree is Changing the Way Product Teams Work]]></title>
            <description><![CDATA[He encontrado una herramienta visual que está cambiando profundamente la forma en que los equipos trabajan. Funciona tan bien que me siento compelido a escribir un libro al respecto. Pero eso llevará tiempo y quiero que lo tengan hoy, así que voy a dar una introducción en esta publicación de blog. Sospecho que tendrán una de dos reacciones. O leerán este artículo por encima, concluirán que es obvio y que ya lo hacen, y se perderán el punto por completo. O quedarán con ganas de más. Para aquellos en el primer grupo, les animo a que se detengan y busquen lo nuevo aquí, y lo prueben. He estado entrenando a equipos de productos durante tres años en descubrimiento moderno de productos y este cambio único ha tenido un impacto mayor en la forma en que los equipos trabajan que todo lo demás que hago con ellos combinado. Para aquellos de ustedes en el último grupo que quedarán con ganas de más, estoy escribiendo lo más rápido que puedo. Espero tener el libro listo a principios de 2017 y estaré publicando pequeños fragmentos en el camino. Sigamos adelante. Por favor, ténganme paciencia, ya que esto tomará un poco de preparación. Todo comenzó hace unos meses... Varios equipos, en una o dos semanas, empezaron a decirme que aunque estaban aprendiendo mucho en nuestras sesiones juntos, les costaba ver el panorama general. Pasaríamos de revisar guías de entrevistas una semana a discutir resultados de experimentos la siguiente. Cada parte por sí misma era útil, pero los equipos no estaban aprendiendo cómo unirlo todo por su cuenta. Siempre tenía que decirles qué hacer a continuación. Mi objetivo como entrenador es hacer que los equipos hagan descubrimiento continuo por sí mismos lo más rápido posible. Así que sabía que algo tenía que cambiar. Seguía preguntándome, ¿cómo decido qué sigue? Y, lo que es más importante, ¿cómo enseño esto a los equipos? Comencé intentando ser más explícito acerca de qué es el descubrimiento de productos moderno. Eso llevó a este video.]]></description>
            <link>https://www.producttalk.org/2016/08/opportunity-solution-tree/</link>
            <guid isPermaLink="true">https://www.producttalk.org/2016/08/opportunity-solution-tree/</guid>
        </item>
        <item>
            <title><![CDATA[Canvas your way to product vision]]></title>
            <description><![CDATA[Participé en un ejercicio de lluvia de ideas basado en el lienzo de producto de Roman Pichler mientras vivía en Sydney. Este taller ayudó a dar forma a la dirección de nuestro desarrollo de productos futuros. En ese momento, creo que no entendí completamente el valor de nuestra lluvia de ideas. Sin embargo, el artefacto de ese taller resultó ser increíblemente útil para alinear a nuestro equipo y comunicarnos con los interesados. A lo largo de los años, me he inspirado en ese taller y en plantillas relacionadas de gestión de productos, y he desarrollado mi propia versión del lienzo de visión del producto (desplázate hacia abajo para ver alternativas). Cada sección del lienzo proporcionará los estímulos para un taller que puedes facilitar con tu equipo. Cuando hayas terminado, tendrás una clara visión del producto con evidencia de apoyo que se puede utilizar con tu equipo y los interesados desde el descubrimiento hasta la entrega y el crecimiento.

Creo firmemente que este taller es como una navaja suiza para los equipos de producto. El mismo formato y estímulos se pueden adaptar para enmarcar el desarrollo de funciones futuras, brainstorming de una nueva idea de producto o llevar a cabo un ejercicio de visión a 3 años. Tu taller se puede realizar en persona, utilizando una pared grande, cinta washi y algunas notas adhesivas, o en línea utilizando una herramienta de pizarra virtual como Miro o Mural (obtén la plantilla de Miro). Me gusta bloquear 4 o 6 horas para que la actividad no se sienta apresurada. Esto proporcionará suficiente tiempo para trabajar en grupos pequeños, discutir, compartir, mapear afinidades y luego llegar a un acuerdo. Además, me gusta combinar este taller con otras actividades para crear una semana de inicio perfecta (hay una lista de ideas al final de este artículo).

Si estás realizando este taller de forma virtual, recomiendo dividir tu facilitación en una lluvia de ideas asincrónica y una sincronización de retroalimentación. Puedes permitir que los participantes hagan lluvias de ideas anticipadamente utilizando tu herramienta de pizarra virtual, o para reducir el sesgo, puedes recopilar respuestas a los estímulos utilizando una herramienta como Google Forms. Antes del taller, mapea las notas adhesivas agregadas y etiqueta los grupos por tema. Al comienzo de tu taller, da a los participantes suficiente tiempo para leer las respuestas y agregar nuevas notas adhesivas para construir sobre lo que ya está allí. Enfoca tu tiempo de sincronización en discutir secciones sin una alineación clara.

Independientemente del formato de facilitación, tu lluvia de ideas comenzará con la declaración del problema. A continuación, pasa a tu público objetivo, sus necesidades y características que podrían satisfacer esas necesidades. Luego, mira la propuesta de valor única de tu producto, cómo medirás el éxito y cómo sonarían los usuarios satisfechos. Termina creando principios de experiencia y tu declaración de visión del producto.]]></description>
            <link>https://uxdesign.cc/canvas-your-way-to-product-vision-79e3250ea278</link>
            <guid isPermaLink="true">https://uxdesign.cc/canvas-your-way-to-product-vision-79e3250ea278</guid>
        </item>
        <item>
            <title><![CDATA[Writing an engineering strategy]]></title>
            <description><![CDATA[Una vez te conviertes en un ejecutivo de ingeniería, comienza a correr un cronómetro invisible en segundo plano. Tic, tic, tic. En algún momento, ese cronómetro sonará y alguien se acercará apresuradamente a ti exigiendo una estrategia de ingeniería. No quedará claro lo que quieren, pero lo necesitarán de verdad, mucho. Si tan solo tuviéramos una estrategia de ingeniería, te suplicarán con la mirada, las cosas estarían bien. Durante mucho tiempo, esa mirada suplicante me acechó, porque simplemente no sabía qué darles: ¿qué es una estrategia de ingeniería? Desde las Magnitudes de exploración, que describían el enfoque aspiracional de Stripe para equilibrar la estandarización técnica y la exploración, hasta la redacción de la estrategia de ingeniería del ingeniero del personal (que reescribí cuatro veces desde cero), seguí iterando mi definición. Al operar en el rol ejecutivo, finalmente he podido solidificar mi punto de vista sobre lo que una estrategia de ingeniería debe lograr y cómo un ejecutivo de ingeniería puede guiar la creación de esa estrategia. Comenzando desde donde estaba hace unos años, sin saber muy bien qué era una estrategia de ingeniería, trabajaremos a través de: Si bien la organización de ingeniería puede tener muchas estrategias, solo hay una estrategia de ingeniería general. Este documento, a menudo implícito y nunca escrita, es tu documento constitucional para dirigir la ingeniería y escribirlo es una de las cosas más valiosas que harás como ejecutivo de ingeniería. Estoy comenzando con un ejemplo de estrategia para demostrar los conceptos que trabajaremos en este fragmento. Si prefieres terminar con este ejemplo, te animo a saltar esta sección y volver después de leer el resto. Los principales factores que queremos abordar en nuestra estrategia son (por ejemplo, nuestro diagnóstico de nuestras circunstancias):]]></description>
            <link>https://lethain.com/eng-strategies/</link>
            <guid isPermaLink="true">https://lethain.com/eng-strategies/</guid>
        </item>
        <item>
            <title><![CDATA[Invisible Details of Interaction Design]]></title>
            <description><![CDATA[El diseño de interacción puede parecer que no tiene ciencia, solo intuición y sensación. Incluso los investigadores tienen dificultades para fundamentar las prácticas de diseño de interacción en la ciencia, tratándolas inherentemente como una caja negra misteriosa. Sin embargo, a través de la reflexión y la experimentación, se pueden descubrir detalles invisibles que crean experiencias fluidas y satisfactorias para los usuarios.]]></description>
            <link>https://rauno.me/craft/interaction-design</link>
            <guid isPermaLink="true">https://rauno.me/craft/interaction-design</guid>
        </item>
        <item>
            <title><![CDATA[A Quick and Easy Guide to tmux]]></title>
            <description><![CDATA[El autor de este artículo explica cómo tmux, conocido como un "multiplexor de terminales", es una herramienta útil para manejar varias ventanas y divisiones en una sola ventana de terminal. También destaca su utilidad cuando se trabaja con servidores remotos o Raspberry Pi a través de SSH.]]></description>
            <link>https://www.hamvocke.com/blog/a-quick-and-easy-guide-to-tmux/</link>
            <guid isPermaLink="true">https://www.hamvocke.com/blog/a-quick-and-easy-guide-to-tmux/</guid>
        </item>
        <item>
            <title><![CDATA[Common pitfalls of GitHub Actions]]></title>
            <description><![CDATA[Si estás creando GitHub Actions a través de la interfaz de GitHub y utilizando el URL https://github.com///actions/new, ten en cuenta que la plantilla para configurar la construcción está dañada. Afortunadamente, todos los problemas pueden solucionarse. Consideremos una plantilla sencilla generada por GitHub para construir código en Python y mejorémosla.]]></description>
            <link>https://ashishb.net/tech/common-pitfalls-of-github-actions/</link>
            <guid isPermaLink="true">https://ashishb.net/tech/common-pitfalls-of-github-actions/</guid>
        </item>
        <item>
            <title><![CDATA[Feature Flags: Theory vs Reality]]></title>
            <description><![CDATA[Durante la segunda mitad de la década de 2010, el movimiento DevOps ganó impulso masivo en la industria de SaaS. Montado en esta ola y respaldado por los esfuerzos de marketing de LaunchDarkly, los feature toggles se convirtieron rápidamente en una herramienta esencial para las operaciones de ingeniería utilizadas por prácticamente todas las empresas de SaaS. En el contexto de DevOps, las feature flags son especialmente útiles para la implementación continua. Al separar la publicación de la implementación, permiten que el marketing y la ingeniería operen de forma independiente, lo que facilita a los ingenieros implementar continuamente características en progreso. Sin embargo, desde el principio, se hicieron evidentes algunas desventajas. Algunos problemas comunes se pueden observar a medida que la adopción del patrón de feature toggle se ha extendido en la industria.]]></description>
            <link>https://bpapillon.com/post/feature-flags-theory-vs-reality/</link>
            <guid isPermaLink="true">https://bpapillon.com/post/feature-flags-theory-vs-reality/</guid>
        </item>
    </channel>
</rss>