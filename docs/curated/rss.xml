<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title><![CDATA[Recopilador de contenidos curados | iyaki]]></title>
        <description><![CDATA[Recopilador de contenidos curados | iyaki]]></description>
        <link>https://iyaki.ar/curated</link>
        <image>
            <url>https://iyaki.ar/images/logo.svg</url>
            <title>Recopilador de contenidos curados | iyaki</title>
            <link>https://iyaki.ar/curated</link>
        </image>
        <generator>RSS for Node</generator>
        <lastBuildDate>Thu, 30 Nov 2023 12:35:27 GMT</lastBuildDate>
        <atom:link href="https://iyaki.ar/curated/rss.xml" rel="self" type="application/rss+xml"/>
        <language><![CDATA[es]]></language>
        <ttl>60</ttl>
        <category><![CDATA[Tecnología]]></category>
        <category><![CDATA[Diseño de sistemas]]></category>
        <category><![CDATA[Management]]></category>
        <item>
            <title><![CDATA[The CodeStitch Page Speed Handbook - Everything you need to know to get a 100/100 Page Speed Score]]></title>
            <description><![CDATA[Cuando sirves imágenes en tu sitio, deberías utilizar el elemento picture para poder elegir qué tamaño de archivo cargar en cada pantalla. Aquí tienes un ejemplo de cómo utilizarlo: normalmente tengo dos fuentes, una para móviles y otra para el resto. La primera etiqueta de origen tiene una anchura máxima de 600px, por lo que todo lo que esté por debajo de 600px cargará la imagen ex-services1-m.webp y todo lo que esté por encima de 601px cargará la imagen de tamaño normal ex-services1.webp. La etiqueta de imagen al final es donde se colocan la carga perezosa (lazy loading) y los atributos de altura y anchura, así como la imagen de reserva en caso de que algunos navegadores (tosi tosi, safari...) no los admitan completamente. Ahora, en las pantallas móviles se cargará la imagen mucho más pequeña, lo que mejorará drásticamente la velocidad de tu página y los tiempos de carga. Ahora que hemos configurado nuestras imágenes correctamente en HTML, podemos empezar a hacer los recortes de ellas. Cuando estés viendo el boceto de diseño en Figma, Adobe XD o incluso si está en un sitio terminado, obtén las dimensiones exactas del tamaño de pantalla de la imagen. Al pasar el cursor sobre la imagen en el sitio, podemos ver que se muestra a 551px de ancho y 250px de alto. Por lo tanto, el tamaño óptimo para escritorio de esta imagen sería dos veces el tamaño de visualización. Este es el tamaño óptimo de visualización para tener en cuenta todas las posibles pantallas y densidades de píxeles. Por lo tanto, esta imagen debería recortarse a un ancho de 1102px y una altura de 500px. Cuando vayamos a la versión móvil y comprobemos el tamaño allí, veremos que sus dimensiones son más pequeñas: 292px de ancho y 213px de alto (aproximado). Por lo tanto, tendríamos que hacer un recorte móvil de la imagen a un ancho de 584px y una altura de 424px. Guarda esta imagen con el mismo nombre pero agrega una "m" al nombre. Así que si esta imagen se llamaba kitchen.jpg, tendrías una imagen kitchen-m.jpg para la imagen móvil. Es mejor hacer estos recortes mientras construyes el sitio y guardar las fotos de esa manera para que no se sienta tan engorroso al finalizar la construcción.]]></description>
            <link>https://codestitch.app/page-speed-handbook</link>
            <guid isPermaLink="true">https://codestitch.app/page-speed-handbook</guid>
        </item>
        <item>
            <title><![CDATA[Email obfuscation: What still works in 2023?]]></title>
            <description><![CDATA[Estas técnicas protegen un enlace clickeable que abrirá el cliente de correo del usuario (por ejemplo, el correo electrónico). Se espera que el texto del enlace sea genérico; si aparece la dirección de correo electrónico en el texto del enlace, entonces la dirección de correo electrónico también se expone como texto plano, y necesitarás agregar técnicas de ofuscación de texto plano. Bloqueado el 100% de spam. Bloqueado el 50% de spam. Bloqueado el 17% de spam.]]></description>
            <link>https://spencermortensen.com/articles/email-obfuscation/</link>
            <guid isPermaLink="true">https://spencermortensen.com/articles/email-obfuscation/</guid>
        </item>
        <item>
            <title><![CDATA[Learn Performance]]></title>
            <description><![CDATA[Este curso está diseñado para aquellos nuevos en el rendimiento web, un aspecto vital de la experiencia del usuario. Cubre conceptos clave y técnicas para mejorar el rendimiento web.]]></description>
            <link>https://web.dev/learn/performance</link>
            <guid isPermaLink="true">https://web.dev/learn/performance</guid>
        </item>
        <item>
            <title><![CDATA[Mastering HTML DOM manipulation with vanilla JavaScript]]></title>
            <description><![CDATA[El desarrollo web avanza a una velocidad impresionante. Aunque existen herramientas modernas como Angular, VueJS, React, Solid y Svelte, aún debemos lidiar con el Document Object Model (DOM). Conocer las APIs del DOM del navegador y cómo utilizarlas es crucial para el desarrollo web. Un sitio web que presente estas APIs, destaque problemas comunes y proporcione respuestas a preguntas populares puede ser increíblemente útil. Es por eso que he recopilado esta colección de recursos. Prepárate para dominar la manipulación del DOM con JavaScript puro. Cambia dinámicamente el favicon basado en las preferencias de esquema de color del usuario. Selecciona una línea determinada en un área de texto.]]></description>
            <link>https://phuoc.ng/collection/html-dom/</link>
            <guid isPermaLink="true">https://phuoc.ng/collection/html-dom/</guid>
        </item>
        <item>
            <title><![CDATA[Navigating around in your shell]]></title>
            <description><![CDATA[Leer mas]]></description>
            <link>https://blog.meain.io/2023/navigating-around-in-shell/</link>
            <guid isPermaLink="true">https://blog.meain.io/2023/navigating-around-in-shell/</guid>
        </item>
        <item>
            <title><![CDATA[We are drowning in Google's magnanimity]]></title>
            <description><![CDATA[Tengo la sospecha de que OKRs, como Objetivos y Resultados Clave, son en realidad un dispositivo inteligente utilizado por Google para desviar a las startups. La atracción de los OKRs radica en su percebida simplicidad: cualquier problema, grande o pequeño, organizacional o técnico, se puede resolver mediante el establecimiento cuidadoso de objetivos claves. Sin embargo, en la práctica esto nunca funciona como se promete y las startups se preguntan por qué no pueden implementar un sistema aparentemente sencillo.]]></description>
            <link>https://www.kpassa.me/posts/google/</link>
            <guid isPermaLink="true">https://www.kpassa.me/posts/google/</guid>
        </item>
        <item>
            <title><![CDATA[Designing Web Design Documentation]]></title>
            <description><![CDATA[Como desarrollador de software ocasionalmente competente, me encanta la buena documentación. Explica no solo cómo funcionan las cosas, sino también por qué funcionan de la manera en que lo hacen. En su mejor momento, la documentación es mucho más que una guía. Es una declaración de principios y mejores prácticas, brindando a las personas la información que necesitan para no solo entender, sino también creer.]]></description>
            <link>https://www.smashingmagazine.com/2023/11/designing-web-design-documentation/</link>
            <guid isPermaLink="true">https://www.smashingmagazine.com/2023/11/designing-web-design-documentation/</guid>
        </item>
        <item>
            <title><![CDATA[11 Ways to Optimize Your Website]]></title>
            <description><![CDATA[Has invertido semanas de arduo trabajo en construir tu sitio web, ¡y ahora por fin está listo para ser publicado! Sin embargo, para asegurarte de que tu sitio web funcione de la mejor manera posible, hay algunas cosas de las que debes ocuparte. En este artículo, exploraremos diversas formas de optimizar tu sitio web para lograr una mejor experiencia de usuario y tiempos de carga más rápidos, lo que se traduce en un mejor posicionamiento en los motores de búsqueda. Cuando el navegador solicita una página web, primero recibirá un documento HTML. El navegador analizará el documento y cuando el analizador encuentre un archivo externo, el navegador enviará otra solicitud para recuperarlo. Por ejemplo, imagina que tienes un sitio web con la siguiente estructura: Para renderizar el archivo index.html, tu navegador tendría que hacer un total de 12 solicitudes, incluyendo 1 archivo HTML, 3 archivos CSS, 3 archivos JavaScript y 5 imágenes. Este proceso consumirá una gran cantidad de tiempo y recursos, lo que resultará en un mal rendimiento del sitio web. Afortunadamente, existen algunas formas de mejorar la velocidad de carga de este sitio web, como combinar y minimizar los archivos estáticos, optimizar las imágenes, almacenar en caché los recursos, y muchas más. Exploraremos todas estas técnicas en este artículo. Pero primero, comencemos con las imágenes. Para empezar, las imágenes de este sitio web están en formato JPG o PNG, que tienden a tener tamaños de archivo más grandes y un mal rendimiento en comparación con los formatos modernos como WebP y AVIF. Hay muchas herramientas y sitios web basados en la nube que pueden convertir tus imágenes, pero el problema con estas herramientas es que generalmente tienes que cargar los archivos para que sean procesados, y algunos de sus servicios no son gratuitos. En este artículo, me gustaría presentarte un software llamado FFmpeg, que te permite convertir las imágenes localmente con un simple comando. Si estás utilizando Mac, puedes instalar FFmpeg con Homebrew: Si estás utilizando Windows, utiliza Winget en su lugar: Alternativamente, simplemente puedes descargar el instalador desde el sitio web oficial de FFmpeg.]]></description>
            <link>https://levelup.gitconnected.com/11-ways-to-optimize-your-website-1711b0d42de8</link>
            <guid isPermaLink="true">https://levelup.gitconnected.com/11-ways-to-optimize-your-website-1711b0d42de8</guid>
        </item>
        <item>
            <title><![CDATA[URL as UI]]></title>
            <description><![CDATA[Aunque en teoría los usuarios no deberían necesitar conocer las URLs, en la práctica muchas veces acceden a sitios web o páginas individuales a través de mecanismos que exponen las URLs en su forma original. Por lo tanto, es importante asegurarse de que un sitio sea accesible y usable incluso para aquellos usuarios que no estén familiarizados con las direcciones URL.]]></description>
            <link>https://www.nngroup.com/articles/url-as-ui/</link>
            <guid isPermaLink="true">https://www.nngroup.com/articles/url-as-ui/</guid>
        </item>
        <item>
            <title><![CDATA[67 Weird Debugging Tricks Your Browser Doesn't Want You to Know]]></title>
            <description><![CDATA[Este artículo presenta una lista de hacks útiles y no obvios para aprovechar al máximo el depurador de tu navegador. Utilizando expresiones con efectos secundarios en lugares inesperados, podemos obtener más funcionalidad de características básicas como los puntos de interrupción condicionales. Por ejemplo, podemos utilizar console.log en puntos de interrupción, y también se pueden utilizar console.count y console.log en el panel de observación. Además, se menciona que ahora todos los navegadores principales admiten directamente logpoints y tracepoints.]]></description>
            <link>https://alan.norbauer.com/articles/browser-debugging-tricks</link>
            <guid isPermaLink="true">https://alan.norbauer.com/articles/browser-debugging-tricks</guid>
        </item>
        <item>
            <title><![CDATA[The Architecture Behind A One-Person Tech Startup]]></title>
            <description><![CDATA[Este ejemplo de Panelbear es un portal de facturación al cliente que funciona muy bien para las SaaS que solo tienen algunos planes, aunque no sería escalable para tiendas en línea con miles de productos individuales. No es necesario agregar ningún agente de registro a mi código, ya que simplemente registro en stdout y Kubernetes recolecta y rota automáticamente los registros por mí. Además, puedo inspeccionar los registros fácilmente utilizando stern, una herramienta CLI para Kubernetes que hace que seguir los registros de la aplicación en múltiples pods sea muy sencillo.]]></description>
            <link>https://anthonynsimon.com/blog/one-man-saas-architecture/</link>
            <guid isPermaLink="true">https://anthonynsimon.com/blog/one-man-saas-architecture/</guid>
        </item>
        <item>
            <title><![CDATA[Command Line Interface Guidelines]]></title>
            <description><![CDATA[Un excelente recurso de código abierto que combina principios tradicionales de UNIX con las actualizaciones necesarias para escribir mejores programas de línea de comandos en la era moderna.]]></description>
            <link>https://clig.dev</link>
            <guid isPermaLink="true">https://clig.dev</guid>
        </item>
        <item>
            <title><![CDATA[Naming Variables In CSS]]></title>
            <description><![CDATA[La elección de nombres es complicada, incluso en CSS. En este artículo se presentan diversas ideas relacionadas con la nomenclatura de las propiedades personalizadas de CSS, las cuales pueden ser de utilidad, aunque no se consideren la única forma correcta de nombrar las variables en CSS.]]></description>
            <link>https://jwdallas.com/posts/namingcssvariables</link>
            <guid isPermaLink="true">https://jwdallas.com/posts/namingcssvariables</guid>
        </item>
        <item>
            <title><![CDATA[A Guide to Public Speaking for Software Engineers]]></title>
            <description><![CDATA["El desarrollo de tus habilidades técnicas es adecuado, pero es necesario que mejores en tu comunicación", comentó tu jefe. Esta es una de las críticas más difíciles de escuchar para un ingeniero de software. ¿Por qué? Porque probablemente pensaste que como ingeniero de software solo necesitarías comunicarte a través de código. Pero no, enfocarse únicamente en el código puede limitar tu potencial de crecimiento y ascensos. Centrarse solo en las habilidades de programación hace que alcances un límite. La comunicación desbloquea más potencial. Inspirado en la publicación de Caleb Mellas. Aunque hay muchos aspectos de la comunicación, este post se centra en la habilidad de hablar en público. Específicamente, cubriremos: Estos conceptos se pueden aplicar a: [lista de áreas o situaciones en las que se puede aplicar la comunicación efectiva].]]></description>
            <link>https://careercutler.substack.com/p/a-guide-to-public-speaking-for-software</link>
            <guid isPermaLink="true">https://careercutler.substack.com/p/a-guide-to-public-speaking-for-software</guid>
        </item>
        <item>
            <title><![CDATA[Fielding Dissertation: CHAPTER 5: Representational State Transfer (REST)]]></title>
            <description><![CDATA[Este capítulo introduce y desarrolla el estilo arquitectónico de Transferencia de Estado Representacional (REST) para sistemas distribuidos de hipermedia, describiendo los principios de ingeniería de software que guían a REST y las restricciones de interacción elegidas para retener esos principios, contrastándolos con las restricciones de otros estilos arquitectónicos. REST es un estilo híbrido derivado de varios estilos arquitectónicos basados ​​en redes descritos en el Capítulo 3 y combinados con restricciones adicionales que definen una interfaz de conector uniforme. El marco de arquitectura de software del Capítulo 1 se utiliza para definir los elementos arquitectónicos de REST y examinar ejemplos de procesos, conectores y vistas de datos de arquitecturas prototípicas.]]></description>
            <link>https://ics.uci.edu/~fielding/pubs/dissertation/rest_arch_style.htm</link>
            <guid isPermaLink="true">https://ics.uci.edu/~fielding/pubs/dissertation/rest_arch_style.htm</guid>
        </item>
        <item>
            <title><![CDATA[View Transitions API & meta frameworks: a practical guide]]></title>
            <description><![CDATA[Las animaciones fluidas durante la navegación en una aplicación móvil llevan existiendo desde hace tiempo. Sin embargo, lograr el mismo efecto en la web ha sido todo un desafío, a menudo requiriendo enfoques complejos y únicos, hasta ahora. Entra en escena la API de Transiciones de Vista, una solución sencilla y directa basada en el navegador. En este artículo, explicaré qué es esta API y cómo funciona. Aprenderemos a crear transiciones suaves y simples entre estados y páginas. También exploraremos cómo la API de Transiciones de Vista se combina con meta frameworks como Astro y Nuxt. Prepárate para un paseo divertido y emocionante con las transiciones.]]></description>
            <link>https://bejamas.io/blog/what-is-view-transitions-api/</link>
            <guid isPermaLink="true">https://bejamas.io/blog/what-is-view-transitions-api/</guid>
        </item>
        <item>
            <title><![CDATA[Getting started with View Transitions on multi-page apps]]></title>
            <description><![CDATA[Leer mas]]></description>
            <link>https://daverupert.com/2023/05/getting-started-view-transitions/</link>
            <guid isPermaLink="true">https://daverupert.com/2023/05/getting-started-view-transitions/</guid>
        </item>
        <item>
            <title><![CDATA[Confusing git terminology]]></title>
            <description><![CDATA[¡Hola! Estoy trabajando lentamente en explicar git. Uno de mis mayores problemas es que, después de casi 15 años de usar git, me he acostumbrado mucho a las idiosincrasias de git y es fácil para mí olvidar lo confuso que puede ser. Así que pregunté a la gente en Mastodon: recibí muchas RESPUESTAS GENIALES y trataré de resumirlas aquí. Aquí hay una lista de los términos.]]></description>
            <link>https://jvns.ca/blog/2023/11/01/confusing-git-terminology</link>
            <guid isPermaLink="true">https://jvns.ca/blog/2023/11/01/confusing-git-terminology</guid>
        </item>
        <item>
            <title><![CDATA[Cómo sentirme cómodo en producción]]></title>
            <description><![CDATA[En este artículo se explora la importancia de sentirse cómodo en producción y cómo esto requiere habilidades diferentes a las de escribir código. Se menciona la necesidad de contar con un mentor y de cambiar la forma de pensar para asegurarse de que los cambios en la función sean monitoreados positivamente.]]></description>
            <link>https://sysarmy.com/blog/posts/sentirme-comodo-produccion/</link>
            <guid isPermaLink="true">https://sysarmy.com/blog/posts/sentirme-comodo-produccion/</guid>
        </item>
        <item>
            <title><![CDATA[How Bear does analytics with CSS]]></title>
            <description><![CDATA[Bear Blog tiene algunas limitaciones de diseño en cuanto a velocidad, eficiencia y estabilidad. Aunque existen muchas plataformas de análisis de código abierto y centradas en la privacidad, decidí construir una propia para Bear. Una de las restricciones que impuse para Bear es no utilizar JavaScript del lado del cliente, lo cual aplica también al sistema de análisis. Aunque el JavaScript del lado del cliente puede ser ajustado para determinar la autenticidad del tráfico a una página y determinar parcialmente si se trata de tráfico de bots o no, lo cual es muy útil para el análisis, la principal desventaja es que la mayoría de los bloqueadores de anuncios también bloquean scripts de análisis. Y no solo los malos, como Google Analytics. Incluso Fathom y Plausible Analytics tienen dificultades para registrar la actividad en navegadores con bloqueadores de anuncios.]]></description>
            <link>https://herman.bearblog.dev/how-bear-does-analytics-with-css</link>
            <guid isPermaLink="true">https://herman.bearblog.dev/how-bear-does-analytics-with-css</guid>
        </item>
    </channel>
</rss>